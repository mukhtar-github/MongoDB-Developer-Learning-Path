sudo systemctl start mongod
sudo systemctl status mongod
sudo systemctl stop mongod


mongo --port 27000.
mongoimport --db mongo-exercises --collection courses --drop --file exercise-data.json --jsonArray

** dkemg
mongo "mongodb+srv://cluster0.dkemg.mongodb.net/admin" --username m001-student
** m001-mongodb-basics
mongodb+srv://m001-student:m001-mongodb-basics@cluster0.dkemg.mongodb.net/test



# Just do those two commands for temporary solution:
$ sudo rm -rf /tmp/mongodb-27017.sock
$ sudo service mongod start
# That shall be fault due to user permissions in .sock file, You may have to change the owner to monogdb user.

chown -R mongodb:mongodb /var/lib/mongodb
chown mongodb:mongodb /tmp/mongodb-27017.sock


sudo rm -r /var/mongodb
sudo mkdir -p /var/mongodb/pki/
sudo chown vagrant:vagrant -R /var/mongodb/pki/
openssl rand -base64 741 > /var/mongodb/pki/m103-keyfile
chmod 400 /var/mongodb/pki/m103-keyfile
ls -l /var/mongodb/pki
ls -l /var/mongodb

cat /var/mongodb/pki/m103-keyfile
sudo mkdir -p /var/mongodb/db/node1
chown -R mongodb.mongodb ~/var/mongodb/db/node1
mongod -f /shared/node1.conf

~~~
vagrant --global-status --prune
*** Bring up a virtual machine
cd vagrant@m103
vagrant up
*** SSH into the machine
vagrant ssh
vagrant@vagrant:~$ logout
Connection to 127.0.0.1 closed.


sudo systemctl stop mongod.service
sudo systemctl start mongod.service
sudo systemctl enable mongod.service
sudo systemctl status mongod.service
sudo apt update


storage:
  dbPath: /var/mongodb/db/node1
net:
  bindIp: localhost
  port: 27017
security:
  authorization: enabled
  keyFile: /var/mongodb/pki/m103-keyfile
systemLog:
  destination: file
  path: /var/mongodb/db/node1/mongod.log
  logAppend: true
processManagement:
  fork: true
replication:
  replSetName: m103-example

*** Checking which mongo processes are running and on which port: ps -ef | grep "[m]ongo"

// start with
sudo mongod -f csrs_1.conf
sudo mongod -f csrs_2.conf
sudo mongod -f csrs_3.conf
sudo mongos -f mongos.conf
mongo --port 26000 --username m103-admin --password m103-pass --authenticationDatabase admin

// followed by
sudo mongod -f node1.conf
sudo mongod -f node2.conf
sudo mongod -f node3.conf
mongo --host "m103-example/localhost:27011" -u "m103-admin" -p "m103-pass" --authenticationDatabase "admin"

* Adding new nodes to  my repSet
cp node3.conf node4.conf
sudo mkdir -p /var/mongodb/db/node4
sudo mongod -f node4.conf
rs.add("localhost:27012")
sudo mongod -f arbiter.conf
rs.addArb("localhost:28000")
rs.remove("localhost:28000")

** If you'd like to deploy a sharded cluster on your machine, you can find the commands from the lecture here:
vagrant@vagrant:~$ vim csrs_1.conf
vagrant@vagrant:~$ sudo mkdir -p /var/mongodb/db/csrs1
Starting the three config servers:
vagrant@vagrant:~$ sudo mongod -f csrs_1.conf
about to fork child process, waiting until server is ready for connections.
forked process: 1494
child process started successfully, parent exiting

rm -r repl_set
rmdir (filename)
mongos> cls -- for clear screen

db.createCollection(name, options)

db.getCollection('products').findOneAndUpdate(
  { "_id" : ObjectId("61406480013e1d1da41a69df") },
  { $push: { "sku" : 1000 } }
)

mongoimport /dataset/products.json --port 26000 -u m103-admin -p m103-pass --authenticationDatabase admin -d m103 --collection products
mongoimport --drop --port 27000 -u m103-application-user -p m103-application-pass --authenticationDatabase admin -d applicationData -c applicationData.products --file "/dataset/products.json"
mongoimport --db applicationData --collection products --port 27000 -u m103-application-user -p m103-application-pass --authenticationDatabase admin --file /dataset/products.json
mongo --port 27000 -u m103-admin -p m103-pass --authenticationDatabase admin


sudo mkdir -p /var/mongodb/db/companies_1.json
vim companies_1.json
mongoimport companies_1.json --port 26000 -u m103-admin -p m103-pass --authenticationDatabase admin -d m103 --collection companies

db.products.insert(
  {
    "sku" : 1000000749,
    "name" : "MTG products",
    "type" : "Sofware",
    "regularPrice" : 39.95,
    "salePrice" : 39.95,
    "shippingWeight" : "0.01"
  }
)

db.products.remove()
sudo mkdir -p /var/mongodb/db/products_2.json
mongoimport products_2.json --drop --port 26000 -u "m103-admin" -p "m103-pass" --authenticationDatabase "admin" --db m103 --collection products
vim -r products_2.json
ls


***
mongo "mongodb://cluster0-shard-00-00-jxeqq.mongodb.net:27017,cluster0-shard-00-01-jxeqq.mongodb.net:27017,cluster0-shard-00-02-jxeqq.mongodb.net:27017/aggregations?replicaSet=Cluster0-shard-0" --authenticationDatabase admin --ssl -u m121 -p aggregations --norc


mukhtar@mukhtar-Aspire-ES1-431:~$ vim validateLab1.js
mukhtar@mukhtar-Aspire-ES1-431:~$ sudo mkdir -p /var/m121/validateLab1.js
mukhtar@mukhtar-Aspire-ES1-431:~$ vim validateLab2.js
mukhtar@mukhtar-Aspire-ES1-431:~$ sudo mkdir -p /var/m121/validateLab2.js
mukhtar@mukhtar-Aspire-ES1-431:~$ cat /var/m121/validateLab1.js
cat: /var/m121/validateLab1.js: Is a directory
cd /var/m121


sudo vim /etc/environment
source /etc/environment
echo $JAVA_HOME
sudo mkdir -p /etc/environment
vim -r /etc/environment
:term
Ctrl-W N

:vert term
:set makeprg=javac\ -g\ /etc/environment
:copen
=expand('%:r') => brings out current file name


To paste in the Vim Editor, use "+p then paste.
To create a new file vim (filename)
:wq or :x or ZZ - write (save) and quit

Long story short: If at all possible, use "*P or "+P to paste 
(which even works in some terminal emulators if I recall correctly).
This is the "correct" way to paste; everything else is basically a workaround gives you those kinds of headaches.

You can explore your current directory by hitting :Ex.
This will show a list view of your files and you can navigate up (j) or down (k) with the usual methods.
You can also delete a file by hitting: SHIFT + D and confirming with y.
To go back to editing, select the file and hit ENTER.

How do I delete a vim file in Terminal?
You can do it with two steps:
save as a new file. :w newfilename.
delete the old file. ! rm oldfilename.

! rm companies_dataset/companies.json
cat /var/m121/validateLab1.js
/var/mongodb/db/companies.json
